package ru.ifmo.ctddev.swapyourbook.mybatis.gen.dao;

import java.util.List;
import org.apache.ibatis.annotations.Arg;
import org.apache.ibatis.annotations.ConstructorArgs;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import ru.ifmo.ctddev.swapyourbook.mybatis.gen.model.UserOffer;
import ru.ifmo.ctddev.swapyourbook.mybatis.gen.model.UserOfferExample;

public interface UserOfferMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_offer
     *
     * @mbggenerated Fri Jan 09 18:39:37 MSK 2015
     */
    @SelectProvider(type=UserOfferSqlProvider.class, method="countByExample")
    int countByExample(UserOfferExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_offer
     *
     * @mbggenerated Fri Jan 09 18:39:37 MSK 2015
     */
    @DeleteProvider(type=UserOfferSqlProvider.class, method="deleteByExample")
    int deleteByExample(UserOfferExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_offer
     *
     * @mbggenerated Fri Jan 09 18:39:37 MSK 2015
     */
    @Insert({
        "insert into user_offer (bookID, title, ",
        "author, comment, ",
        "from_google, thumbnailID, ",
        "trusted, owner)",
        "values (#{bookid,jdbcType=INTEGER}, #{title,jdbcType=VARCHAR}, ",
        "#{author,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, ",
        "#{fromGoogle,jdbcType=BIT}, #{thumbnailid,jdbcType=INTEGER}, ",
        "#{trusted,jdbcType=BIT}, #{owner,jdbcType=INTEGER})"
    })
    int insert(UserOffer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_offer
     *
     * @mbggenerated Fri Jan 09 18:39:37 MSK 2015
     */
    @InsertProvider(type=UserOfferSqlProvider.class, method="insertSelective")
    int insertSelective(UserOffer record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_offer
     *
     * @mbggenerated Fri Jan 09 18:39:37 MSK 2015
     */
    @SelectProvider(type=UserOfferSqlProvider.class, method="selectByExample")
    @ConstructorArgs({
        @Arg(column="bookID", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="title", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="author", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="comment", javaType=String.class, jdbcType=JdbcType.VARCHAR),
        @Arg(column="from_google", javaType=Boolean.class, jdbcType=JdbcType.BIT),
        @Arg(column="thumbnailID", javaType=Integer.class, jdbcType=JdbcType.INTEGER),
        @Arg(column="trusted", javaType=Boolean.class, jdbcType=JdbcType.BIT),
        @Arg(column="owner", javaType=Integer.class, jdbcType=JdbcType.INTEGER)
    })
    List<UserOffer> selectByExample(UserOfferExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_offer
     *
     * @mbggenerated Fri Jan 09 18:39:37 MSK 2015
     */
    @UpdateProvider(type=UserOfferSqlProvider.class, method="updateByExampleSelective")
    int updateByExampleSelective(@Param("record") UserOffer record, @Param("example") UserOfferExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_offer
     *
     * @mbggenerated Fri Jan 09 18:39:37 MSK 2015
     */
    @UpdateProvider(type=UserOfferSqlProvider.class, method="updateByExample")
    int updateByExample(@Param("record") UserOffer record, @Param("example") UserOfferExample example);
}