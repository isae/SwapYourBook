package ru.ifmo.ctddev.swapyourbook.mybatis.gen.model;

import java.util.ArrayList;
import java.util.List;

public class UserWishExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_wish
     *
     * @mbggenerated Fri Jan 09 16:11:15 MSK 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_wish
     *
     * @mbggenerated Fri Jan 09 16:11:15 MSK 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table user_wish
     *
     * @mbggenerated Fri Jan 09 16:11:15 MSK 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_wish
     *
     * @mbggenerated Fri Jan 09 16:11:15 MSK 2015
     */
    public UserWishExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_wish
     *
     * @mbggenerated Fri Jan 09 16:11:15 MSK 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_wish
     *
     * @mbggenerated Fri Jan 09 16:11:15 MSK 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_wish
     *
     * @mbggenerated Fri Jan 09 16:11:15 MSK 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_wish
     *
     * @mbggenerated Fri Jan 09 16:11:15 MSK 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_wish
     *
     * @mbggenerated Fri Jan 09 16:11:15 MSK 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_wish
     *
     * @mbggenerated Fri Jan 09 16:11:15 MSK 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_wish
     *
     * @mbggenerated Fri Jan 09 16:11:15 MSK 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_wish
     *
     * @mbggenerated Fri Jan 09 16:11:15 MSK 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_wish
     *
     * @mbggenerated Fri Jan 09 16:11:15 MSK 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table user_wish
     *
     * @mbggenerated Fri Jan 09 16:11:15 MSK 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_wish
     *
     * @mbggenerated Fri Jan 09 16:11:15 MSK 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andUserwishidIsNull() {
            addCriterion("userWishID is null");
            return (Criteria) this;
        }

        public Criteria andUserwishidIsNotNull() {
            addCriterion("userWishID is not null");
            return (Criteria) this;
        }

        public Criteria andUserwishidEqualTo(Integer value) {
            addCriterion("userWishID =", value, "userwishid");
            return (Criteria) this;
        }

        public Criteria andUserwishidNotEqualTo(Integer value) {
            addCriterion("userWishID <>", value, "userwishid");
            return (Criteria) this;
        }

        public Criteria andUserwishidGreaterThan(Integer value) {
            addCriterion("userWishID >", value, "userwishid");
            return (Criteria) this;
        }

        public Criteria andUserwishidGreaterThanOrEqualTo(Integer value) {
            addCriterion("userWishID >=", value, "userwishid");
            return (Criteria) this;
        }

        public Criteria andUserwishidLessThan(Integer value) {
            addCriterion("userWishID <", value, "userwishid");
            return (Criteria) this;
        }

        public Criteria andUserwishidLessThanOrEqualTo(Integer value) {
            addCriterion("userWishID <=", value, "userwishid");
            return (Criteria) this;
        }

        public Criteria andUserwishidIn(List<Integer> values) {
            addCriterion("userWishID in", values, "userwishid");
            return (Criteria) this;
        }

        public Criteria andUserwishidNotIn(List<Integer> values) {
            addCriterion("userWishID not in", values, "userwishid");
            return (Criteria) this;
        }

        public Criteria andUserwishidBetween(Integer value1, Integer value2) {
            addCriterion("userWishID between", value1, value2, "userwishid");
            return (Criteria) this;
        }

        public Criteria andUserwishidNotBetween(Integer value1, Integer value2) {
            addCriterion("userWishID not between", value1, value2, "userwishid");
            return (Criteria) this;
        }

        public Criteria andTitleIsNull() {
            addCriterion("title is null");
            return (Criteria) this;
        }

        public Criteria andTitleIsNotNull() {
            addCriterion("title is not null");
            return (Criteria) this;
        }

        public Criteria andTitleEqualTo(String value) {
            addCriterion("title =", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotEqualTo(String value) {
            addCriterion("title <>", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleGreaterThan(String value) {
            addCriterion("title >", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleGreaterThanOrEqualTo(String value) {
            addCriterion("title >=", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleLessThan(String value) {
            addCriterion("title <", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleLessThanOrEqualTo(String value) {
            addCriterion("title <=", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleLike(String value) {
            addCriterion("title like", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotLike(String value) {
            addCriterion("title not like", value, "title");
            return (Criteria) this;
        }

        public Criteria andTitleIn(List<String> values) {
            addCriterion("title in", values, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotIn(List<String> values) {
            addCriterion("title not in", values, "title");
            return (Criteria) this;
        }

        public Criteria andTitleBetween(String value1, String value2) {
            addCriterion("title between", value1, value2, "title");
            return (Criteria) this;
        }

        public Criteria andTitleNotBetween(String value1, String value2) {
            addCriterion("title not between", value1, value2, "title");
            return (Criteria) this;
        }

        public Criteria andAuthorIsNull() {
            addCriterion("author is null");
            return (Criteria) this;
        }

        public Criteria andAuthorIsNotNull() {
            addCriterion("author is not null");
            return (Criteria) this;
        }

        public Criteria andAuthorEqualTo(String value) {
            addCriterion("author =", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorNotEqualTo(String value) {
            addCriterion("author <>", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorGreaterThan(String value) {
            addCriterion("author >", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorGreaterThanOrEqualTo(String value) {
            addCriterion("author >=", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorLessThan(String value) {
            addCriterion("author <", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorLessThanOrEqualTo(String value) {
            addCriterion("author <=", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorLike(String value) {
            addCriterion("author like", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorNotLike(String value) {
            addCriterion("author not like", value, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorIn(List<String> values) {
            addCriterion("author in", values, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorNotIn(List<String> values) {
            addCriterion("author not in", values, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorBetween(String value1, String value2) {
            addCriterion("author between", value1, value2, "author");
            return (Criteria) this;
        }

        public Criteria andAuthorNotBetween(String value1, String value2) {
            addCriterion("author not between", value1, value2, "author");
            return (Criteria) this;
        }

        public Criteria andMessageSentIsNull() {
            addCriterion("message_sent is null");
            return (Criteria) this;
        }

        public Criteria andMessageSentIsNotNull() {
            addCriterion("message_sent is not null");
            return (Criteria) this;
        }

        public Criteria andMessageSentEqualTo(Integer value) {
            addCriterion("message_sent =", value, "messageSent");
            return (Criteria) this;
        }

        public Criteria andMessageSentNotEqualTo(Integer value) {
            addCriterion("message_sent <>", value, "messageSent");
            return (Criteria) this;
        }

        public Criteria andMessageSentGreaterThan(Integer value) {
            addCriterion("message_sent >", value, "messageSent");
            return (Criteria) this;
        }

        public Criteria andMessageSentGreaterThanOrEqualTo(Integer value) {
            addCriterion("message_sent >=", value, "messageSent");
            return (Criteria) this;
        }

        public Criteria andMessageSentLessThan(Integer value) {
            addCriterion("message_sent <", value, "messageSent");
            return (Criteria) this;
        }

        public Criteria andMessageSentLessThanOrEqualTo(Integer value) {
            addCriterion("message_sent <=", value, "messageSent");
            return (Criteria) this;
        }

        public Criteria andMessageSentIn(List<Integer> values) {
            addCriterion("message_sent in", values, "messageSent");
            return (Criteria) this;
        }

        public Criteria andMessageSentNotIn(List<Integer> values) {
            addCriterion("message_sent not in", values, "messageSent");
            return (Criteria) this;
        }

        public Criteria andMessageSentBetween(Integer value1, Integer value2) {
            addCriterion("message_sent between", value1, value2, "messageSent");
            return (Criteria) this;
        }

        public Criteria andMessageSentNotBetween(Integer value1, Integer value2) {
            addCriterion("message_sent not between", value1, value2, "messageSent");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_wish
     *
     * @mbggenerated do_not_delete_during_merge Fri Jan 09 16:11:15 MSK 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table user_wish
     *
     * @mbggenerated Fri Jan 09 16:11:15 MSK 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}